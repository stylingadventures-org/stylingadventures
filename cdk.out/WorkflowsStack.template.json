{
 "Description": "Closet approval workflow - dev",
 "Resources": {
  "VirusScanFnServiceRole105BB56B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/VirusScanFn/ServiceRole/Resource"
   }
  },
  "VirusScanFnE6FC2115": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n          exports.handler = async (event) => {\n            console.log(\"VirusScanFn\", JSON.stringify(event));\n            return { ok: true, name: \"VirusScanFn\", event };\n          };\n        "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "VirusScanFnServiceRole105BB56B",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "VirusScanFnServiceRole105BB56B"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/VirusScanFn/Resource"
   }
  },
  "ModerationFnServiceRoleBF6ED484": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/ModerationFn/ServiceRole/Resource"
   }
  },
  "ModerationFn7E78A67D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n          exports.handler = async (event) => {\n            console.log(\"ModerationFn\", JSON.stringify(event));\n            return { ok: true, name: \"ModerationFn\", event };\n          };\n        "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ModerationFnServiceRoleBF6ED484",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "ModerationFnServiceRoleBF6ED484"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/ModerationFn/Resource"
   }
  },
  "PiiCheckFnServiceRole84F31904": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/PiiCheckFn/ServiceRole/Resource"
   }
  },
  "PiiCheckFnF52DF218": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n          exports.handler = async (event) => {\n            console.log(\"PiiCheckFn\", JSON.stringify(event));\n            return { ok: true, name: \"PiiCheckFn\", event };\n          };\n        "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "PiiCheckFnServiceRole84F31904",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "PiiCheckFnServiceRole84F31904"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/PiiCheckFn/Resource"
   }
  },
  "PublishFnServiceRoleC9D15B30": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/PublishFn/ServiceRole/Resource"
   }
  },
  "PublishFnServiceRoleDefaultPolicy0D921A88": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "DataStack:ExportsOutputFnGetAttAppTable815C50BCArnF3D9E3C3"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PublishFnServiceRoleDefaultPolicy0D921A88",
    "Roles": [
     {
      "Ref": "PublishFnServiceRoleC9D15B30"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/PublishFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PublishFnB0C9E186": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n          exports.handler = async (event) => {\n            console.log(\"PublishFn\", JSON.stringify(event));\n            return { ok: true, name: \"PublishFn\", event };\n          };\n        "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "PublishFnServiceRoleC9D15B30",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "PublishFnServiceRoleDefaultPolicy0D921A88",
    "PublishFnServiceRoleC9D15B30"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/PublishFn/Resource"
   }
  },
  "RejectFnServiceRole9BBF1C50": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/RejectFn/ServiceRole/Resource"
   }
  },
  "RejectFnServiceRoleDefaultPolicyFAA6A835": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "DataStack:ExportsOutputFnGetAttAppTable815C50BCArnF3D9E3C3"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RejectFnServiceRoleDefaultPolicyFAA6A835",
    "Roles": [
     {
      "Ref": "RejectFnServiceRole9BBF1C50"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/RejectFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RejectFnEB2EE464": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n          exports.handler = async (event) => {\n            console.log(\"RejectFn\", JSON.stringify(event));\n            return { ok: true, name: \"RejectFn\", event };\n          };\n        "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "RejectFnServiceRole9BBF1C50",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "RejectFnServiceRoleDefaultPolicyFAA6A835",
    "RejectFnServiceRole9BBF1C50"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/RejectFn/Resource"
   }
  },
  "ClosetApprovalTopic3451AB0B": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/ClosetApprovalTopic/Resource"
   }
  },
  "ClosetUploadApprovalRoleC5B63322": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/ClosetUploadApproval/Role/Resource"
   }
  },
  "ClosetUploadApprovalRoleDefaultPolicy11CFF20D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "VirusScanFnE6FC2115",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "VirusScanFnE6FC2115",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ModerationFn7E78A67D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ModerationFn7E78A67D",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PiiCheckFnF52DF218",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PiiCheckFnF52DF218",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "ClosetApprovalTopic3451AB0B"
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "RejectFnEB2EE464",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "RejectFnEB2EE464",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PublishFnB0C9E186",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PublishFnB0C9E186",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords",
        "xray:GetSamplingRules",
        "xray:GetSamplingTargets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClosetUploadApprovalRoleDefaultPolicy11CFF20D",
    "Roles": [
     {
      "Ref": "ClosetUploadApprovalRoleC5B63322"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/ClosetUploadApproval/Role/DefaultPolicy/Resource"
   }
  },
  "ClosetUploadApprovalDA1D2210": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"VirusScan\",\"States\":{\"VirusScan\":{\"Next\":\"Moderation\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "VirusScanFnE6FC2115",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"Moderation\":{\"Next\":\"PIICheck\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ModerationFn7E78A67D",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"PIICheck\":{\"Next\":\"WaitForHumanApproval\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "PiiCheckFnF52DF218",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"WaitForHumanApproval\":{\"Next\":\"Approved?\",\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::sns:publish.waitForTaskToken\",\"Parameters\":{\"TopicArn\":\"",
       {
        "Ref": "ClosetApprovalTopic3451AB0B"
       },
       "\",\"Message\":{\"token.$\":\"$$.Task.Token\",\"itemId.$\":\"$.itemId\",\"ownerSub.$\":\"$.ownerSub\"},\"Subject\":\"ApprovalRequired\"}},\"Approved?\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.approved\",\"BooleanEquals\":true,\"Next\":\"Publish\"}],\"Default\":\"Reject\"},\"Reject\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "RejectFnEB2EE464",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"Publish\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":null,\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "PublishFnB0C9E186",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":21600}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ClosetUploadApprovalRoleC5B63322",
      "Arn"
     ]
    },
    "StateMachineType": "STANDARD",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "TracingConfiguration": {
     "Enabled": true
    }
   },
   "DependsOn": [
    "ClosetUploadApprovalRoleDefaultPolicy11CFF20D",
    "ClosetUploadApprovalRoleC5B63322"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/ClosetUploadApproval/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12NwYrCQBBEv8V7p9WwF8/CgqAgiXfpTFrSZtIj9kRZhvl3SdyFxVO9KoqqEsv1BlcLelrh2r7w0mCqI7ke6Gnn5GloWsL0PaqLEhS2F/3jDEIDpip4nuJZj8GL+5nsmzKYGqZTuImb0hkyWOTb5XfGzpGsN0y12nFsvFgH+/l2p4/Q80cb07YL4hjqSJEP5DrR+f+/zxkqtjDeHWfQ0DJebfkoV7je4NfiaiLFfdQoA2P11hcTUhcvCQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "WorkflowsStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ExportsOutputRefClosetUploadApprovalDA1D2210CE637AAA": {
   "Value": {
    "Ref": "ClosetUploadApprovalDA1D2210"
   },
   "Export": {
    "Name": "WorkflowsStack:ExportsOutputRefClosetUploadApprovalDA1D2210CE637AAA"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}