{
 "Description": "Uploads API, S3, SQS worker, thumbs CDN - dev",
 "Resources": {
  "UploadsBucket5E5E9B64": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "PUT"
       ],
       "AllowedOrigins": [
        "https://d1682i07dc1r3k.cloudfront.net"
       ],
       "ExposedHeaders": [
        "ETag",
        "x-amz-version-id"
       ],
       "MaxAge": 86400
      },
      {
       "AllowedHeaders": [
        "Origin",
        "Accept",
        "Referer",
        "User-Agent",
        "Range"
       ],
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "AllowedOrigins": [
        "https://d1682i07dc1r3k.cloudfront.net"
       ],
       "ExposedHeaders": [
        "ETag",
        "Content-Type",
        "Content-Length",
        "Last-Modified",
        "Accept-Ranges"
       ],
       "MaxAge": 86400
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsBucket/Resource"
   }
  },
  "UploadsBucketPolicy34A32B0B": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "UploadsBucket5E5E9B64"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UploadsBucket5E5E9B64",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UploadsBucket5E5E9B64",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "ThumbsOai69797662",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UploadsBucket5E5E9B64",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UploadsBucket5E5E9B64",
             "Arn"
            ]
           },
           "/thumbs/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "ThumbsOai69797662",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "UploadsBucket5E5E9B64",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:PutObject",
        "s3:AbortMultipartUpload"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PresignFnServiceRole01C8BCF6",
          "Arn"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "UploadsBucket5E5E9B64",
            "Arn"
           ]
          },
          "/users/*"
         ]
        ]
       },
       "Sid": "AllowPresignFnPutObject"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsBucket/Policy/Resource"
   }
  },
  "UploadsBucketNotifications4592A072": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UploadsBucket5E5E9B64"
    },
    "NotificationConfiguration": {
     "QueueConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".png"
          },
          {
           "Name": "prefix",
           "Value": "users/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".jpg"
          },
          {
           "Name": "prefix",
           "Value": "users/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".jpeg"
          },
          {
           "Name": "prefix",
           "Value": "users/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".webp"
          },
          {
           "Name": "prefix",
           "Value": "users/"
          }
         ]
        }
       },
       "QueueArn": {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true,
    "SkipDestinationValidation": false
   },
   "DependsOn": [
    "ThumbQueuePolicy5F7B15B9",
    "ThumbQueueB1CB3F96",
    "UploadsBucketPolicy34A32B0B"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsBucket/Notifications/Resource"
   }
  },
  "ThumbsOai69797662": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbsOai/Resource"
   }
  },
  "ThumbsCorsDCDF4AF7": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "CorsConfig": {
      "AccessControlAllowCredentials": false,
      "AccessControlAllowHeaders": {
       "Items": [
        "Origin",
        "Accept",
        "Referer",
        "User-Agent",
        "Range"
       ]
      },
      "AccessControlAllowMethods": {
       "Items": [
        "GET",
        "HEAD",
        "OPTIONS"
       ]
      },
      "AccessControlAllowOrigins": {
       "Items": [
        "https://d1682i07dc1r3k.cloudfront.net"
       ]
      },
      "AccessControlExposeHeaders": {
       "Items": [
        "ETag",
        "Content-Type",
        "Content-Length",
        "Last-Modified",
        "Accept-Ranges"
       ]
      },
      "AccessControlMaxAgeSec": 86400,
      "OriginOverride": true
     },
     "Name": "UploadsStackThumbsCors4856C759"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbsCors/Resource"
   }
  },
  "ThumbsCacheE4A4665D": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": "Thumbs cache with query strings allowed",
     "DefaultTTL": 600,
     "MaxTTL": 3600,
     "MinTTL": 0,
     "Name": "UploadsStackThumbsCacheA2E882A0-us-east-1",
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": false,
      "EnableAcceptEncodingGzip": false,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "all"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbsCache/Resource"
   }
  },
  "ThumbsDistribution18F928EF": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 5,
       "ErrorCode": 404
      },
      {
       "ErrorCachingMinTTL": 5,
       "ErrorCode": 403
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS"
      ],
      "CachePolicyId": {
       "Ref": "ThumbsCacheE4A4665D"
      },
      "Compress": true,
      "ResponseHeadersPolicyId": {
       "Ref": "ThumbsCorsDCDF4AF7"
      },
      "TargetOriginId": "UploadsStackThumbsDistributionOrigin194D796EC",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "UploadsBucket5E5E9B64",
         "RegionalDomainName"
        ]
       },
       "Id": "UploadsStackThumbsDistributionOrigin194D796EC",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "ThumbsOai69797662"
           }
          ]
         ]
        }
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbsDistribution/Resource"
   }
  },
  "ThumbDlqB425C70E": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 1209600,
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbDlq/Resource"
   }
  },
  "ThumbQueueB1CB3F96": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "ThumbDlqB425C70E",
       "Arn"
      ]
     },
     "maxReceiveCount": 3
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "VisibilityTimeout": 60
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbQueue/Resource"
   }
  },
  "ThumbQueuePolicy5F7B15B9": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "UploadsBucket5E5E9B64",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "s3.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "ThumbQueueB1CB3F96"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbQueue/Policy/Resource"
   }
  },
  "PresignFnServiceRole01C8BCF6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/PresignFn/ServiceRole/Resource"
   }
  },
  "PresignFnServiceRoleDefaultPolicyA1C82940": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UploadsBucket5E5E9B64",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UploadsBucket5E5E9B64",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PresignFnServiceRoleDefaultPolicyA1C82940",
    "Roles": [
     {
      "Ref": "PresignFnServiceRole01C8BCF6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/PresignFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PresignFnA38D425B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "a09bb21261b68801bdaee54b2d7274c71f0cda70abba3de3f28a142fc84372a2.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "UploadsBucket5E5E9B64"
      },
      "WEB_ORIGIN": "https://d1682i07dc1r3k.cloudfront.net",
      "THUMB_QUEUE_URL": {
       "Ref": "ThumbQueueB1CB3F96"
      },
      "THUMBS_CDN": {
       "Fn::Join": [
        "",
        [
         "https://",
         {
          "Fn::GetAtt": [
           "ThumbsDistribution18F928EF",
           "DomainName"
          ]
         }
        ]
       ]
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "PresignFnServiceRole01C8BCF6",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "PresignFnServiceRoleDefaultPolicyA1C82940",
    "PresignFnServiceRole01C8BCF6"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/PresignFn/Resource",
    "aws:asset:path": "C:\\Users\\12483\\Desktop\\stylingadventures\\stylingadventures",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "PresignFnLogRetention51016138": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "PresignFnA38D425B"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/PresignFn/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs22.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ListFnServiceRole4DFB7CA2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ListFn/ServiceRole/Resource"
   }
  },
  "ListFnServiceRoleDefaultPolicy40CF7272": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UploadsBucket5E5E9B64",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UploadsBucket5E5E9B64",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListFnServiceRoleDefaultPolicy40CF7272",
    "Roles": [
     {
      "Ref": "ListFnServiceRole4DFB7CA2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ListFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListFn7192A255": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "7a26833fcf361c1b701e5d16912038416c7a319ea28cfa9502fe691ac6460a88.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "UploadsBucket5E5E9B64"
      },
      "WEB_ORIGIN": "https://d1682i07dc1r3k.cloudfront.net"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ListFnServiceRole4DFB7CA2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "ListFnServiceRoleDefaultPolicy40CF7272",
    "ListFnServiceRole4DFB7CA2"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ListFn/Resource",
    "aws:asset:path": "C:\\Users\\12483\\Desktop\\stylingadventures\\stylingadventures",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListFnLogRetention8B215913": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListFn7192A255"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ListFn/LogRetention/Resource"
   }
  },
  "ThumbnailerFnServiceRole368D8473": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbnailerFn/ServiceRole/Resource"
   }
  },
  "ThumbnailerFnServiceRoleDefaultPolicy3EC6C0A9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UploadsBucket5E5E9B64",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UploadsBucket5E5E9B64",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ThumbnailerFnServiceRoleDefaultPolicy3EC6C0A9",
    "Roles": [
     {
      "Ref": "ThumbnailerFnServiceRole368D8473"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbnailerFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ThumbnailerFnEDCB14F0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "e31e8fbf2a7d6d3f41e3aa8d86f2ad46f505b6083facbea73a5ca0ec973ef856.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "UploadsBucket5E5E9B64"
      },
      "THUMBS_PREFIX": "thumbs/",
      "MAX_WIDTH": "360",
      "JPEG_QUALITY": "80"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ThumbnailerFnServiceRole368D8473",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 60
   },
   "DependsOn": [
    "ThumbnailerFnServiceRoleDefaultPolicy3EC6C0A9",
    "ThumbnailerFnServiceRole368D8473"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbnailerFn/Resource",
    "aws:asset:path": "C:\\Users\\12483\\Desktop\\stylingadventures\\stylingadventures",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ThumbnailerFnLogRetention7DF9B692": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ThumbnailerFnEDCB14F0"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbnailerFn/LogRetention/Resource"
   }
  },
  "ThumbStateMachineRole4BEDD96E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbStateMachine/Role/Resource"
   }
  },
  "ThumbStateMachineRoleDefaultPolicyD4C45F7F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ThumbnailerFnEDCB14F0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ThumbnailerFnEDCB14F0",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords",
        "xray:GetSamplingRules",
        "xray:GetSamplingTargets"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ThumbStateMachineRoleDefaultPolicyD4C45F7F",
    "Roles": [
     {
      "Ref": "ThumbStateMachineRole4BEDD96E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "ThumbStateMachineDAEB9766": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"GenerateThumbnail\",\"States\":{\"GenerateThumbnail\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"States.TaskFailed\",\"States.Timeout\"],\"IntervalSeconds\":3,\"MaxAttempts\":2,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "ThumbnailerFnEDCB14F0",
         "Arn"
        ]
       },
       "\"}},\"TimeoutSeconds\":300}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ThumbStateMachineRole4BEDD96E",
      "Arn"
     ]
    },
    "StateMachineType": "STANDARD",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "TracingConfiguration": {
     "Enabled": true
    }
   },
   "DependsOn": [
    "ThumbStateMachineRoleDefaultPolicyD4C45F7F",
    "ThumbStateMachineRole4BEDD96E"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbStateMachine/Resource"
   }
  },
  "StartThumbFlowFnServiceRole916A6687": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/StartThumbFlowFn/ServiceRole/Resource"
   }
  },
  "StartThumbFlowFnServiceRoleDefaultPolicy2D5898F3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "ThumbStateMachineDAEB9766"
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "StartThumbFlowFnServiceRoleDefaultPolicy2D5898F3",
    "Roles": [
     {
      "Ref": "StartThumbFlowFnServiceRole916A6687"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/StartThumbFlowFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "StartThumbFlowFnD5A01751": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "367290a660152f12ac429a1af9b80cdeddeccaa101cdef5cac57adc72d91c5a1.zip"
    },
    "Environment": {
     "Variables": {
      "STATE_MACHINE_ARN": {
       "Ref": "ThumbStateMachineDAEB9766"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "StartThumbFlowFnServiceRole916A6687",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "StartThumbFlowFnServiceRoleDefaultPolicy2D5898F3",
    "StartThumbFlowFnServiceRole916A6687"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/StartThumbFlowFn/Resource",
    "aws:asset:path": "C:\\Users\\12483\\Desktop\\stylingadventures\\stylingadventures",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "StartThumbFlowFnLogRetentionFACF0E4F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "StartThumbFlowFnD5A01751"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/StartThumbFlowFn/LogRetention/Resource"
   }
  },
  "StartThumbFlowFnSqsEventSourceUploadsStackThumbQueue408A7875F737F130": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "ThumbQueueB1CB3F96",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "StartThumbFlowFnD5A01751"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/StartThumbFlowFn/SqsEventSource:UploadsStackThumbQueue408A7875/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UploadsBucket5E5E9B64",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    skipDestinationValidation = props.get('SkipDestinationValidation', 'false').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config, SkipDestinationValidation=skipDestinationValidation)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def get_id(n):\n    n['Id'] = ''\n    sorted_notifications = sort_filter_rules(n)\n    strToHash=json.dumps(sorted_notifications, sort_keys=True).replace('\"Name\": \"prefix\"', '\"Name\": \"Prefix\"').replace('\"Name\": \"suffix\"', '\"Name\": \"Suffix\"')\n    return f\"{stack_id}-{hash(strToHash)}\"\n  def with_id(n):\n    n['Id'] = get_id(n)\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        old_incoming_ids = [get_id(n) for n in old.get(t, [])]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not get_id(n) in old_incoming_ids]      \n    elif request_type == 'Delete':\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n\ndef sort_filter_rules(json_obj):\n  if not isinstance(json_obj, dict):\n      return json_obj\n  for key, value in json_obj.items():\n      if isinstance(value, dict):\n          json_obj[key] = sort_filter_rules(value)\n      elif isinstance(value, list):\n          json_obj[key] = [sort_filter_rules(item) for item in value]\n  if \"Filter\" in json_obj and \"Key\" in json_obj[\"Filter\"] and \"FilterRules\" in json_obj[\"Filter\"][\"Key\"]:\n      filter_rules = json_obj[\"Filter\"][\"Key\"][\"FilterRules\"]\n      sorted_filter_rules = sorted(filter_rules, key=lambda x: x[\"Name\"])\n      json_obj[\"Filter\"][\"Key\"][\"FilterRules\"] = sorted_filter_rules\n  return json_obj"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.13",
    "Timeout": 300,
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "ThumbHeadFnServiceRole3E5C13F3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbHeadFn/ServiceRole/Resource"
   }
  },
  "ThumbHeadFnServiceRoleDefaultPolicy91888102": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UploadsBucket5E5E9B64",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UploadsBucket5E5E9B64",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ThumbHeadFnServiceRoleDefaultPolicy91888102",
    "Roles": [
     {
      "Ref": "ThumbHeadFnServiceRole3E5C13F3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbHeadFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ThumbHeadFn9C2B9FD0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "0de95a9e69d8beda35fc6a78f468c40b6d70acc0bf0bd6f7e5367eaea53fbac0.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "UploadsBucket5E5E9B64"
      },
      "WEB_ORIGIN": "https://d1682i07dc1r3k.cloudfront.net"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ThumbHeadFnServiceRole3E5C13F3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "ThumbHeadFnServiceRoleDefaultPolicy91888102",
    "ThumbHeadFnServiceRole3E5C13F3"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbHeadFn/Resource",
    "aws:asset:path": "C:\\Users\\12483\\Desktop\\stylingadventures\\stylingadventures",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ThumbHeadFnLogRetentionFCC64834": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ThumbHeadFn9C2B9FD0"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/ThumbHeadFn/LogRetention/Resource"
   }
  },
  "UploadsAuthorizer5E742C62": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "UploadsStackUploadsAuthorizerD9299124",
    "ProviderARNs": [
     {
      "Fn::ImportValue": "IdentityStack:ExportsOutputFnGetAttUserPool6BA7E5F2Arn686ACC00"
     }
    ],
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsAuthorizer/Resource"
   }
  },
  "UploadsApiF6E592E7": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "uploads-api",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Resource"
   }
  },
  "UploadsApiCloudWatchRole6FE18421": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/CloudWatchRole/Resource"
   }
  },
  "UploadsApiAccountFDD2DDB1": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "UploadsApiCloudWatchRole6FE18421",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "UploadsApiF6E592E7"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Account"
   }
  },
  "UploadsApiDeployment4A67E04Cae757e96f90654ad497e066fa7e3bd1d": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "DependsOn": [
    "UploadsApideleteDELETE03C056E4",
    "UploadsApideleteOPTIONS1AD6A023",
    "UploadsApidelete14170098",
    "UploadsApilistGET6FEA2B99",
    "UploadsApilistOPTIONSA1D1A8A2",
    "UploadsApilist04BFB266",
    "UploadsApiOPTIONS016D7C40",
    "UploadsApipresignOPTIONSB65EB223",
    "UploadsApipresignPOSTD80E85B8",
    "UploadsApipresignE1161A2C",
    "UploadsApithumbheadGETE8DAC9C1",
    "UploadsApithumbheadOPTIONSB6DAB6F5",
    "UploadsApithumbhead26656547",
    "UploadsApiDefault4XXF627BD67",
    "UploadsApiDefault5XXBDD43D3A"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "UploadsApiDeploymentStageprod1839106B": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "UploadsApiDeployment4A67E04Cae757e96f90654ad497e066fa7e3bd1d"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    },
    "StageName": "prod",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "DependsOn": [
    "UploadsApiAccountFDD2DDB1"
   ],
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/DeploymentStage.prod/Resource"
   }
  },
  "UploadsApiOPTIONS016D7C40": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,Cookie'",
        "method.response.header.Access-Control-Allow-Origin": "'https://d1682i07dc1r3k.cloudfront.net'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "UploadsApiF6E592E7",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/OPTIONS/Resource"
   }
  },
  "UploadsApilist04BFB266": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "UploadsApiF6E592E7",
      "RootResourceId"
     ]
    },
    "PathPart": "list",
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/list/Resource"
   }
  },
  "UploadsApilistOPTIONSA1D1A8A2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,Cookie'",
        "method.response.header.Access-Control-Allow-Origin": "'https://d1682i07dc1r3k.cloudfront.net'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "UploadsApilist04BFB266"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/list/OPTIONS/Resource"
   }
  },
  "UploadsApilistGETApiPermissionUploadsStackUploadsApiC6DB0904GETlist488F6896": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListFn7192A255",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/",
       {
        "Ref": "UploadsApiDeploymentStageprod1839106B"
       },
       "/GET/list"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/list/GET/ApiPermission.UploadsStackUploadsApiC6DB0904.GET..list"
   }
  },
  "UploadsApilistGETApiPermissionTestUploadsStackUploadsApiC6DB0904GETlistE8338BB3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListFn7192A255",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/test-invoke-stage/GET/list"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/list/GET/ApiPermission.Test.UploadsStackUploadsApiC6DB0904.GET..list"
   }
  },
  "UploadsApilistGET6FEA2B99": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "UploadsAuthorizer5E742C62"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListFn7192A255",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UploadsApilist04BFB266"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/list/GET/Resource"
   }
  },
  "UploadsApipresignE1161A2C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "UploadsApiF6E592E7",
      "RootResourceId"
     ]
    },
    "PathPart": "presign",
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/presign/Resource"
   }
  },
  "UploadsApipresignOPTIONSB65EB223": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,Cookie'",
        "method.response.header.Access-Control-Allow-Origin": "'https://d1682i07dc1r3k.cloudfront.net'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "UploadsApipresignE1161A2C"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/presign/OPTIONS/Resource"
   }
  },
  "UploadsApipresignPOSTApiPermissionUploadsStackUploadsApiC6DB0904POSTpresign5C1AE409": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresignFnA38D425B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/",
       {
        "Ref": "UploadsApiDeploymentStageprod1839106B"
       },
       "/POST/presign"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/presign/POST/ApiPermission.UploadsStackUploadsApiC6DB0904.POST..presign"
   }
  },
  "UploadsApipresignPOSTApiPermissionTestUploadsStackUploadsApiC6DB0904POSTpresign17E05DE7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresignFnA38D425B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/test-invoke-stage/POST/presign"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/presign/POST/ApiPermission.Test.UploadsStackUploadsApiC6DB0904.POST..presign"
   }
  },
  "UploadsApipresignPOSTD80E85B8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "UploadsAuthorizer5E742C62"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PresignFnA38D425B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UploadsApipresignE1161A2C"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/presign/POST/Resource"
   }
  },
  "UploadsApidelete14170098": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "UploadsApiF6E592E7",
      "RootResourceId"
     ]
    },
    "PathPart": "delete",
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/delete/Resource"
   }
  },
  "UploadsApideleteOPTIONS1AD6A023": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,Cookie'",
        "method.response.header.Access-Control-Allow-Origin": "'https://d1682i07dc1r3k.cloudfront.net'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "UploadsApidelete14170098"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/delete/OPTIONS/Resource"
   }
  },
  "UploadsApideleteDELETEApiPermissionUploadsStackUploadsApiC6DB0904DELETEdeleteCC917882": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresignFnA38D425B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/",
       {
        "Ref": "UploadsApiDeploymentStageprod1839106B"
       },
       "/DELETE/delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/delete/DELETE/ApiPermission.UploadsStackUploadsApiC6DB0904.DELETE..delete"
   }
  },
  "UploadsApideleteDELETEApiPermissionTestUploadsStackUploadsApiC6DB0904DELETEdelete823BEA33": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresignFnA38D425B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/test-invoke-stage/DELETE/delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/delete/DELETE/ApiPermission.Test.UploadsStackUploadsApiC6DB0904.DELETE..delete"
   }
  },
  "UploadsApideleteDELETE03C056E4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "UploadsAuthorizer5E742C62"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PresignFnA38D425B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UploadsApidelete14170098"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/delete/DELETE/Resource"
   }
  },
  "UploadsApithumbhead26656547": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "UploadsApiF6E592E7",
      "RootResourceId"
     ]
    },
    "PathPart": "thumb-head",
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/thumb-head/Resource"
   }
  },
  "UploadsApithumbheadOPTIONSB6DAB6F5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,Cookie'",
        "method.response.header.Access-Control-Allow-Origin": "'https://d1682i07dc1r3k.cloudfront.net'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"http://localhost:5173\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "UploadsApithumbhead26656547"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/thumb-head/OPTIONS/Resource"
   }
  },
  "UploadsApithumbheadGETApiPermissionUploadsStackUploadsApiC6DB0904GETthumbhead618E3AC0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ThumbHeadFn9C2B9FD0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/",
       {
        "Ref": "UploadsApiDeploymentStageprod1839106B"
       },
       "/GET/thumb-head"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/thumb-head/GET/ApiPermission.UploadsStackUploadsApiC6DB0904.GET..thumb-head"
   }
  },
  "UploadsApithumbheadGETApiPermissionTestUploadsStackUploadsApiC6DB0904GETthumbhead3F296C4D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ThumbHeadFn9C2B9FD0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:637423256673:",
       {
        "Ref": "UploadsApiF6E592E7"
       },
       "/test-invoke-stage/GET/thumb-head"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/thumb-head/GET/ApiPermission.Test.UploadsStackUploadsApiC6DB0904.GET..thumb-head"
   }
  },
  "UploadsApithumbheadGETE8DAC9C1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "UploadsAuthorizer5E742C62"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ThumbHeadFn9C2B9FD0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UploadsApithumbhead26656547"
    },
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default/thumb-head/GET/Resource"
   }
  },
  "UploadsApiDefault4XXF627BD67": {
   "Type": "AWS::ApiGateway::GatewayResponse",
   "Properties": {
    "ResponseParameters": {
     "gatewayresponse.header.Access-Control-Allow-Origin": "'https://d1682i07dc1r3k.cloudfront.net'",
     "gatewayresponse.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,Cookie'",
     "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,OPTIONS'",
     "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'"
    },
    "ResponseType": "DEFAULT_4XX",
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default4XX/Resource"
   }
  },
  "UploadsApiDefault5XXBDD43D3A": {
   "Type": "AWS::ApiGateway::GatewayResponse",
   "Properties": {
    "ResponseParameters": {
     "gatewayresponse.header.Access-Control-Allow-Origin": "'https://d1682i07dc1r3k.cloudfront.net'",
     "gatewayresponse.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key,Cookie'",
     "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,OPTIONS'",
     "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'"
    },
    "ResponseType": "DEFAULT_5XX",
    "RestApiId": {
     "Ref": "UploadsApiF6E592E7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsApi/Default5XX/Resource"
   }
  },
  "UploadsDashboard1822CB03": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Thumb Queue Depth\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/SQS\",\"ApproximateNumberOfMessagesVisible\",\"QueueName\",\"",
       {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "QueueName"
        ]
       },
       "\",{\"period\":60}],[\"AWS/SQS\",\"ApproximateAgeOfOldestMessage\",\"QueueName\",\"",
       {
        "Fn::GetAtt": [
         "ThumbQueueB1CB3F96",
         "QueueName"
        ]
       },
       "\",{\"period\":60,\"stat\":\"Maximum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"min\":0}}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Step Functions Executions\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/States\",\"ExecutionsSucceeded\",\"StateMachineArn\",\"",
       {
        "Ref": "ThumbStateMachineDAEB9766"
       },
       "\",{\"stat\":\"Sum\"}],[\"AWS/States\",\"ExecutionsFailed\",\"StateMachineArn\",\"",
       {
        "Ref": "ThumbStateMachineDAEB9766"
       },
       "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Lambda Errors\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "StartThumbFlowFnD5A01751"
       },
       "\",{\"period\":60,\"stat\":\"Sum\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "ThumbnailerFnEDCB14F0"
       },
       "\",{\"period\":60,\"stat\":\"Sum\"}]],\"yAxis\":{}}}]}"
      ]
     ]
    },
    "DashboardName": "UploadsStack-Uploads"
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/UploadsDashboard/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSTW/bMAz9Lb0rWpvu0qOb9Ato1szBzoEiM7ZiW/REKkFm+L8Pkp3YHbqL+R5JPZIm53J+9yBvb9SJZjorZ5XZyXbDSpdCnWjb0r1sH70ugcVibwfUmzVWRp9H98B78qgIOqEr9NneoWXZfjiTG5toDURvGVg2HB8vQs5zyPkyIwVq0BK8gsrA0Vj0PwGlCxiTpnRpiJ3ZeTZoQ2zKO0G/SbY/PXgIsR7E7yg2oZ2oVL3L1NZiBgeSP6J59lZHdaNq2aZYRa1oR5WLAN1vFREwySSYQVC2i7296jwdwfIGvdOwUk1jbB4UvvauwdWGKA5TYU7yHfMUOPxGtIIYmv0gS1tWVJJ8jxXf7BFL+JwQT4BhpXRhbBxiyjuhGpMrhpM6y3aBuTWMvwjcGrGixHOBzvwBF95NWArESWOG3V1gojV6y2IJTYXnGmw8tAnbsMovLeQQVOLk4cDECrjALAQHdIkORXr80rd6OZgQ+8c1XOpJsS5ku1RU7FC5KHwlXfdJ9Ari9kJvwx4+PDeeOxEuQx7o23F+K+8e5PebAxkzc96yqUGmvf0LuthF+38DAAA="
   },
   "Metadata": {
    "aws:cdk:path": "UploadsStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "UploadsApiEndpoint8004A65B": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "UploadsApiF6E592E7"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "UploadsApiDeploymentStageprod1839106B"
      },
      "/"
     ]
    ]
   }
  },
  "UploadsApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "UploadsApiF6E592E7"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "UploadsApiDeploymentStageprod1839106B"
      },
      "/"
     ]
    ]
   }
  },
  "UploadsBucketName": {
   "Value": {
    "Ref": "UploadsBucket5E5E9B64"
   }
  },
  "ThumbQueueUrl": {
   "Value": {
    "Ref": "ThumbQueueB1CB3F96"
   }
  },
  "ThumbsCdnDomainName": {
   "Value": {
    "Fn::GetAtt": [
     "ThumbsDistribution18F928EF",
     "DomainName"
    ]
   }
  },
  "ThumbStateMachineArn": {
   "Value": {
    "Ref": "ThumbStateMachineDAEB9766"
   }
  },
  "UploadsDashboardName": {
   "Value": {
    "Ref": "UploadsDashboard1822CB03"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}