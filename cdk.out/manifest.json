{
  "version": "48.0.0",
  "artifacts": {
    "IdentityStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "IdentityStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "IdentityStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "IdentityStack.template.json",
        "terminationProtection": false,
        "tags": {
          "App": "stylingadventures"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/49770450e91d14e6fc4ae3a602b8f839a6bfb32af93a0e6c6503c70d981e5631.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "IdentityStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "IdentityStack.assets"
      ],
      "metadata": {
        "/IdentityStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "App",
                "Value": "stylingadventures"
              }
            ]
          }
        ],
        "/IdentityStack/UserPool/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserPool6BA7E5F2"
          }
        ],
        "/IdentityStack/WebClient/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "WebClient697086FD"
          }
        ],
        "/IdentityStack/HostedUiDomain": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HostedUiDomain"
          }
        ],
        "/IdentityStack/IdentityPool": [
          {
            "type": "aws:cdk:logicalId",
            "data": "IdentityPool"
          }
        ],
        "/IdentityStack/CognitoUserPoolId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CognitoUserPoolId"
          }
        ],
        "/IdentityStack/CognitoWebClientId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CognitoWebClientId"
          }
        ],
        "/IdentityStack/IdentityPoolId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "IdentityPoolId"
          }
        ],
        "/IdentityStack/HostedUiDomainName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HostedUiDomainName"
          }
        ],
        "/IdentityStack/HostedUiLoginUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HostedUiLoginUrl"
          }
        ],
        "/IdentityStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/IdentityStack/CDKMetadata/Condition": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadataAvailable"
          }
        ],
        "/IdentityStack/Exports/Output{\"Fn::GetAtt\":[\"UserPool6BA7E5F2\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttUserPool6BA7E5F2Arn686ACC00"
          }
        ],
        "/IdentityStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/IdentityStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "IdentityStack"
    },
    "UploadsStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "UploadsStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "UploadsStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "UploadsStack.template.json",
        "terminationProtection": false,
        "tags": {
          "App": "stylingadventures"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/958bb7f598a2370d47a0e36a7c62da57977ef6f33bfb45206973b8f3ec97ee79.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "UploadsStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "IdentityStack",
        "UploadsStack.assets"
      ],
      "metadata": {
        "/UploadsStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "App",
                "Value": "stylingadventures"
              }
            ]
          }
        ],
        "/UploadsStack/UploadsBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucket5E5E9B64"
          }
        ],
        "/UploadsStack/UploadsBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketPolicy34A32B0B"
          }
        ],
        "/UploadsStack/UploadsBucket/Notifications/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketNotifications4592A072"
          }
        ],
        "/UploadsStack/ThumbsOai/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbsOai69797662"
          }
        ],
        "/UploadsStack/ThumbsDistribution/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbsDistribution18F928EF"
          }
        ],
        "/UploadsStack/ThumbDlq/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbDlqB425C70E"
          }
        ],
        "/UploadsStack/ThumbQueue/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbQueueB1CB3F96"
          }
        ],
        "/UploadsStack/ThumbQueue/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbQueuePolicy5F7B15B9"
          }
        ],
        "/UploadsStack/PresignFn/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PresignFnServiceRole01C8BCF6"
          }
        ],
        "/UploadsStack/PresignFn/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PresignFnServiceRoleDefaultPolicyA1C82940"
          }
        ],
        "/UploadsStack/PresignFn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PresignFnA38D425B"
          }
        ],
        "/UploadsStack/PresignFn/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PresignFnLogRetention51016138"
          }
        ],
        "/UploadsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ],
        "/UploadsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB"
          }
        ],
        "/UploadsStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A"
          }
        ],
        "/UploadsStack/LatestNodeRuntimeMap": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LatestNodeRuntimeMap"
          }
        ],
        "/UploadsStack/ThumbnailerFn/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbnailerFnServiceRole368D8473"
          }
        ],
        "/UploadsStack/ThumbnailerFn/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbnailerFnServiceRoleDefaultPolicy3EC6C0A9"
          }
        ],
        "/UploadsStack/ThumbnailerFn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbnailerFnEDCB14F0"
          }
        ],
        "/UploadsStack/ThumbnailerFn/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbnailerFnLogRetention7DF9B692"
          }
        ],
        "/UploadsStack/ThumbStateMachine/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbStateMachineRole4BEDD96E"
          }
        ],
        "/UploadsStack/ThumbStateMachine/Role/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbStateMachineRoleDefaultPolicyD4C45F7F"
          }
        ],
        "/UploadsStack/ThumbStateMachine/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbStateMachineDAEB9766"
          }
        ],
        "/UploadsStack/StartThumbFlowFn/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StartThumbFlowFnServiceRole916A6687"
          }
        ],
        "/UploadsStack/StartThumbFlowFn/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StartThumbFlowFnServiceRoleDefaultPolicy2D5898F3"
          }
        ],
        "/UploadsStack/StartThumbFlowFn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StartThumbFlowFnD5A01751"
          }
        ],
        "/UploadsStack/StartThumbFlowFn/LogRetention/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StartThumbFlowFnLogRetentionFACF0E4F"
          }
        ],
        "/UploadsStack/StartThumbFlowFn/SqsEventSource:UploadsStackThumbQueue408A7875/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StartThumbFlowFnSqsEventSourceUploadsStackThumbQueue408A7875F737F130"
          }
        ],
        "/UploadsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ],
        "/UploadsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36"
          }
        ],
        "/UploadsStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691"
          }
        ],
        "/UploadsStack/UploadsAuthorizer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsAuthorizer5E742C62"
          }
        ],
        "/UploadsStack/UploadsApi/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiF6E592E7"
          }
        ],
        "/UploadsStack/UploadsApi/CloudWatchRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiCloudWatchRole6FE18421"
          }
        ],
        "/UploadsStack/UploadsApi/Account": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiAccountFDD2DDB1"
          }
        ],
        "/UploadsStack/UploadsApi/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiDeployment4A67E04C06f8e027b6bd2f45b3e2a165cea3d370"
          }
        ],
        "/UploadsStack/UploadsApi/DeploymentStage.prod/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiDeploymentStageprod1839106B"
          }
        ],
        "/UploadsStack/UploadsApi/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiEndpoint8004A65B"
          }
        ],
        "/UploadsStack/UploadsApi/Default/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiOPTIONS016D7C40"
          }
        ],
        "/UploadsStack/UploadsApi/Default/list/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApilist04BFB266"
          }
        ],
        "/UploadsStack/UploadsApi/Default/list/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApilistOPTIONSA1D1A8A2"
          }
        ],
        "/UploadsStack/UploadsApi/Default/list/GET/ApiPermission.UploadsStackUploadsApiC6DB0904.GET..list": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApilistGETApiPermissionUploadsStackUploadsApiC6DB0904GETlist488F6896"
          }
        ],
        "/UploadsStack/UploadsApi/Default/list/GET/ApiPermission.Test.UploadsStackUploadsApiC6DB0904.GET..list": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApilistGETApiPermissionTestUploadsStackUploadsApiC6DB0904GETlistE8338BB3"
          }
        ],
        "/UploadsStack/UploadsApi/Default/list/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApilistGET6FEA2B99"
          }
        ],
        "/UploadsStack/UploadsApi/Default/presign/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApipresignE1161A2C"
          }
        ],
        "/UploadsStack/UploadsApi/Default/presign/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApipresignOPTIONSB65EB223"
          }
        ],
        "/UploadsStack/UploadsApi/Default/presign/POST/ApiPermission.UploadsStackUploadsApiC6DB0904.POST..presign": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApipresignPOSTApiPermissionUploadsStackUploadsApiC6DB0904POSTpresign5C1AE409"
          }
        ],
        "/UploadsStack/UploadsApi/Default/presign/POST/ApiPermission.Test.UploadsStackUploadsApiC6DB0904.POST..presign": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApipresignPOSTApiPermissionTestUploadsStackUploadsApiC6DB0904POSTpresign17E05DE7"
          }
        ],
        "/UploadsStack/UploadsApi/Default/presign/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApipresignPOSTD80E85B8"
          }
        ],
        "/UploadsStack/UploadsApi/Default/delete/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApidelete14170098"
          }
        ],
        "/UploadsStack/UploadsApi/Default/delete/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApideleteOPTIONS1AD6A023"
          }
        ],
        "/UploadsStack/UploadsApi/Default/delete/DELETE/ApiPermission.UploadsStackUploadsApiC6DB0904.DELETE..delete": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApideleteDELETEApiPermissionUploadsStackUploadsApiC6DB0904DELETEdeleteCC917882"
          }
        ],
        "/UploadsStack/UploadsApi/Default/delete/DELETE/ApiPermission.Test.UploadsStackUploadsApiC6DB0904.DELETE..delete": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApideleteDELETEApiPermissionTestUploadsStackUploadsApiC6DB0904DELETEdelete823BEA33"
          }
        ],
        "/UploadsStack/UploadsApi/Default/delete/DELETE/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApideleteDELETE03C056E4"
          }
        ],
        "/UploadsStack/UploadsApi/Default4XX/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiDefault4XXF627BD67"
          }
        ],
        "/UploadsStack/UploadsApi/Default5XX/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiDefault5XXBDD43D3A"
          }
        ],
        "/UploadsStack/UploadsDashboard/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsDashboard1822CB03"
          }
        ],
        "/UploadsStack/UploadsApiUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsApiUrl"
          }
        ],
        "/UploadsStack/UploadsBucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketName"
          }
        ],
        "/UploadsStack/ThumbQueueUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbQueueUrl"
          }
        ],
        "/UploadsStack/ThumbsCdnDomainName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbsCdnDomainName"
          }
        ],
        "/UploadsStack/ThumbStateMachineArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ThumbStateMachineArn"
          }
        ],
        "/UploadsStack/UploadsDashboardName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsDashboardName"
          }
        ],
        "/UploadsStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/UploadsStack/CDKMetadata/Condition": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadataAvailable"
          }
        ],
        "/UploadsStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/UploadsStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "UploadsStack"
    },
    "WebStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "WebStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "WebStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "WebStack.template.json",
        "terminationProtection": false,
        "tags": {
          "App": "stylingadventures"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/fe61947b0332d8d41a10c15e71b42f75bf064bb991961d68f482f62102b31d13.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "WebStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "WebStack.assets"
      ],
      "metadata": {
        "/WebStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "App",
                "Value": "stylingadventures"
              }
            ]
          }
        ],
        "/WebStack/SiteBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SiteBucket397A1860"
          }
        ],
        "/WebStack/SiteBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SiteBucketPolicy3AC1D0F8"
          }
        ],
        "/WebStack/SiteOai/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SiteOaiE31FB8B2"
          }
        ],
        "/WebStack/DirIndexRewriteFn/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DirIndexRewriteFn951FA463"
          }
        ],
        "/WebStack/Distribution/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Distribution830FAC52"
          }
        ],
        "/WebStack/DeploySite/AwsCliLayer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DeploySiteAwsCliLayer88B0EBE2"
          }
        ],
        "/WebStack/DeploySite/CustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DeploySiteCustomResourceE47C9748"
          }
        ],
        "/WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C": [
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 2
          }
        ],
        "/WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ],
        "/WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF"
          }
        ],
        "/WebStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536"
          }
        ],
        "/WebStack/CloudFrontDistributionDomainName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CloudFrontDistributionDomainName"
          }
        ],
        "/WebStack/StaticSiteBucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "StaticSiteBucketName"
          }
        ],
        "/WebStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/WebStack/CDKMetadata/Condition": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadataAvailable"
          }
        ],
        "/WebStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/WebStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "WebStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1029.3"
}