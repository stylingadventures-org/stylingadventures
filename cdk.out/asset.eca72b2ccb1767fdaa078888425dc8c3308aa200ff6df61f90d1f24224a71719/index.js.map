{
  "version": 3,
  "sources": ["../../lambda/workflows/save-approval-token.ts"],
  "sourcesContent": ["// lambda/workflows/save-approval-token.ts\r\nimport { SNSHandler } from \"aws-lambda\";\r\nimport {\r\n  DynamoDBClient,\r\n  UpdateItemCommand,\r\n} from \"@aws-sdk/client-dynamodb\";\r\n\r\nconst ddb = new DynamoDBClient({});\r\nconst { TABLE_NAME = \"\" } = process.env;\r\nif (!TABLE_NAME) throw new Error(\"Missing env: TABLE_NAME\");\r\n\r\n/**\r\n * SNS message from WAIT_FOR_TASK_TOKEN contains:\r\n *  {\r\n *    \"token\": \"<task token>\",\r\n *    \"itemId\": \"<id>\",\r\n *    \"ownerSub\": \"<sub>\"\r\n *  }\r\n * We persist `approvalToken` on the item so the admin resolver can callback SFN.\r\n */\r\nexport const handler: SNSHandler = async (event) => {\r\n  for (const rec of event.Records) {\r\n    if (!rec.Sns?.Message) continue;\r\n    let msg: any;\r\n    try {\r\n      msg = JSON.parse(rec.Sns.Message);\r\n    } catch {\r\n      console.warn(\"Bad SNS message:\", rec.Sns.Message);\r\n      continue;\r\n    }\r\n    const token = msg?.token;\r\n    const itemId = msg?.itemId;\r\n    if (!token || !itemId) {\r\n      console.warn(\"Missing token or itemId in SNS message:\", msg);\r\n      continue;\r\n    }\r\n\r\n    await ddb.send(\r\n      new UpdateItemCommand({\r\n        TableName: TABLE_NAME,\r\n        Key: { pk: { S: `ITEM#${itemId}` }, sk: { S: \"META\" } },\r\n        UpdateExpression:\r\n          \"SET approvalToken = :t, updatedAt = :u, gsi2pk = if_not_exists(gsi2pk, :g2), gsi2sk = if_not_exists(gsi2sk, :u)\",\r\n        ExpressionAttributeValues: {\r\n          \":t\": { S: token },\r\n          \":u\": { S: new Date().toISOString() },\r\n          \":g2\": { S: \"STATUS#PENDING\" },\r\n        },\r\n      })\r\n    );\r\n  }\r\n};\r\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAEA,IAAAI,EAGO,oCAEDC,EAAM,IAAI,iBAAe,CAAC,CAAC,EAC3B,CAAE,WAAAC,EAAa,EAAG,EAAI,QAAQ,IACpC,GAAI,CAACA,EAAY,MAAM,IAAI,MAAM,yBAAyB,EAWnD,IAAMJ,EAAsB,MAAOK,GAAU,CAClD,QAAWC,KAAOD,EAAM,QAAS,CAC/B,GAAI,CAACC,EAAI,KAAK,QAAS,SACvB,IAAIC,EACJ,GAAI,CACFA,EAAM,KAAK,MAAMD,EAAI,IAAI,OAAO,CAClC,MAAQ,CACN,QAAQ,KAAK,mBAAoBA,EAAI,IAAI,OAAO,EAChD,QACF,CACA,IAAME,EAAQD,GAAK,MACbE,EAASF,GAAK,OACpB,GAAI,CAACC,GAAS,CAACC,EAAQ,CACrB,QAAQ,KAAK,0CAA2CF,CAAG,EAC3D,QACF,CAEA,MAAMJ,EAAI,KACR,IAAI,oBAAkB,CACpB,UAAWC,EACX,IAAK,CAAE,GAAI,CAAE,EAAG,QAAQK,CAAM,EAAG,EAAG,GAAI,CAAE,EAAG,MAAO,CAAE,EACtD,iBACE,kHACF,0BAA2B,CACzB,KAAM,CAAE,EAAGD,CAAM,EACjB,KAAM,CAAE,EAAG,IAAI,KAAK,EAAE,YAAY,CAAE,EACpC,MAAO,CAAE,EAAG,gBAAiB,CAC/B,CACF,CAAC,CACH,CACF,CACF",
  "names": ["save_approval_token_exports", "__export", "handler", "__toCommonJS", "import_client_dynamodb", "ddb", "TABLE_NAME", "event", "rec", "msg", "token", "itemId"]
}
