{
 "Description": "AppSync GraphQL API - dev",
 "Resources": {
  "HelloFnServiceRoleDA97FE56": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/HelloFn/ServiceRole/Resource"
   }
  },
  "HelloFn7942DF23": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "dba505f53767a9e6657cdeba0a1fe85822984a28978face5a785b36aa3fb4af7.zip"
    },
    "Environment": {
     "Variables": {
      "NODE_OPTIONS": "--enable-source-maps"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "HelloFnServiceRoleDA97FE56",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "DependsOn": [
    "HelloFnServiceRoleDA97FE56"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/HelloFn/Resource",
    "aws:asset:path": "asset.dba505f53767a9e6657cdeba0a1fe85822984a28978face5a785b36aa3fb4af7",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "StylingApiC401F041": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
    "Name": "stylingadventures-api",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ],
    "UserPoolConfig": {
     "AwsRegion": "us-east-1",
     "DefaultAction": "ALLOW",
     "UserPoolId": {
      "Fn::ImportValue": "IdentityStack:ExportsOutputRefUserPool6BA7E5F296FD7236"
     }
    },
    "XrayEnabled": true
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/Resource"
   }
  },
  "StylingApiSchemaD8A6FBCC": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "Definition": "\"\"\"Auth directive used in this API (mapped to Cognito user pools in AppSync)\"\"\"\r\ndirective @aws_auth(cognito_groups: [String]) on FIELD_DEFINITION | OBJECT\r\n\r\n\"\"\" -------- App base enums & types -------- \"\"\"\r\nenum ClosetStatus { PENDING APPROVED REJECTED PUBLISHED }\r\n\r\ntype ClosetItem {\r\n  id: ID!\r\n  ownerSub: String!\r\n  status: ClosetStatus!\r\n  createdAt: AWSDateTime!\r\n  updatedAt: AWSDateTime!\r\n  mediaKey: String\r\n  title: String\r\n  reason: String          # optional: why REJECTED\r\n}\r\n\r\n\"\"\"RBAC: roles & tiers\"\"\"\r\nenum Role { FAN BESTIE CREATOR COLLAB ADMIN }\r\nenum Tier { FREE PRIME }\r\n\r\ntype User {\r\n  id: ID!\r\n  email: AWSEmail\r\n  role: Role!\r\n  tier: Tier\r\n  createdAt: AWSDateTime!\r\n  updatedAt: AWSDateTime!\r\n}\r\n\r\ninput SetUserRoleInput {\r\n  userId: ID!\r\n  email: AWSEmail\r\n  role: Role!\r\n  tier: Tier\r\n}\r\n\r\n\"\"\"Paged list of users for admin UI\"\"\"\r\ntype AdminUsersPage {\r\n  items: [User!]!\r\n  nextToken: String\r\n}\r\n\r\n\"\"\" -------- Queries -------- \"\"\"\r\ntype Query {\r\n  hello: String!\r\n\r\n  \"\"\"\r\n  Returns the signed-in creatorâ€™s items. Never null; empty list if none.\r\n  Implemented by lambda/graphql/closet.ts -> myCloset\r\n  \"\"\"\r\n  myCloset: [ClosetItem!]!\r\n\r\n  \"\"\"\r\n  Items awaiting moderation. Move implemented resolver here (Query) to avoid\r\n  resolver/operation mismatches. Requires elevated groups.\r\n  \"\"\"\r\n  adminListPending: [ClosetItem!]!\r\n    @aws_auth(cognito_groups: [\"ADMIN\", \"COLLAB\", \"PRIME\"])\r\n\r\n  # Roles / user directory\r\n  me: User!\r\n  adminListUsers(search: String, limit: Int, nextToken: String): AdminUsersPage\r\n    @aws_auth(cognito_groups: [\"ADMIN\"])\r\n}\r\n\r\n\"\"\" -------- Mutations -------- \"\"\"\r\ntype Mutation {\r\n  \"\"\"\r\n  Creates a new item in DRAFT. Implemented by lambda/graphql/closet.ts -> createClosetItem\r\n  \"\"\"\r\n  createClosetItem(title: String, mediaKey: String): ClosetItem! @aws_auth\r\n\r\n  \"\"\"\r\n  Marks item PENDING and starts the approval Step Function.\r\n  Returns the executionArn. Implemented by lambda/graphql/closet.ts -> requestClosetApproval\r\n  \"\"\"\r\n  requestClosetApproval(id: ID!): String!\r\n\r\n  # Roles\r\n  setUserRole(input: SetUserRoleInput!): User!\r\n\r\n  # Moderation actions (to implement next)\r\n  adminApproveItem(id: ID!): ClosetItem!\r\n    @aws_auth(cognito_groups: [\"ADMIN\", \"COLLAB\"])\r\n  adminRejectItem(id: ID!, reason: String): ClosetItem!\r\n    @aws_auth(cognito_groups: [\"ADMIN\", \"COLLAB\"])\r\n}\r\n\r\nschema {\r\n  query: Query\r\n  mutation: Mutation\r\n}\r\n\r\n"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/Schema"
   }
  },
  "StylingApiRolesDSServiceRole6309BB1F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/RolesDS/ServiceRole/Resource"
   }
  },
  "StylingApiRolesDSServiceRoleDefaultPolicy31FB8C9C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "RolesRolesFn3CC83E37",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "RolesRolesFn3CC83E37",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "StylingApiRolesDSServiceRoleDefaultPolicy31FB8C9C",
    "Roles": [
     {
      "Ref": "StylingApiRolesDSServiceRole6309BB1F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/RolesDS/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "StylingApiRolesDSC3D586A1": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "RolesRolesFn3CC83E37",
       "Arn"
      ]
     }
    },
    "Name": "RolesDS",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "StylingApiRolesDSServiceRole6309BB1F",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/RolesDS/Resource"
   }
  },
  "StylingApiMeResolver7B5FB3EB": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "DataSourceName": "RolesDS",
    "FieldName": "me",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"Invoke\", \"payload\": $util.toJson($ctx)}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)",
    "TypeName": "Query"
   },
   "DependsOn": [
    "StylingApiRolesDSC3D586A1",
    "StylingApiSchemaD8A6FBCC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/MeResolver/Resource"
   }
  },
  "StylingApiSetUserRoleResolver55497963": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "DataSourceName": "RolesDS",
    "FieldName": "setUserRole",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"Invoke\", \"payload\": $util.toJson($ctx)}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "StylingApiRolesDSC3D586A1",
    "StylingApiSchemaD8A6FBCC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/SetUserRoleResolver/Resource"
   }
  },
  "StylingApiHelloDSServiceRoleEDCF88D7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/HelloDS/ServiceRole/Resource"
   }
  },
  "StylingApiHelloDSServiceRoleDefaultPolicy42C67BA4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HelloFn7942DF23",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HelloFn7942DF23",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "StylingApiHelloDSServiceRoleDefaultPolicy42C67BA4",
    "Roles": [
     {
      "Ref": "StylingApiHelloDSServiceRoleEDCF88D7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/HelloDS/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "StylingApiHelloDSD8F06B09": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "HelloFn7942DF23",
       "Arn"
      ]
     }
    },
    "Name": "HelloDS",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "StylingApiHelloDSServiceRoleEDCF88D7",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/HelloDS/Resource"
   }
  },
  "StylingApiHelloResolver27973C2F": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "DataSourceName": "HelloDS",
    "FieldName": "hello",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"Invoke\", \"payload\": $util.toJson($ctx)}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)",
    "TypeName": "Query"
   },
   "DependsOn": [
    "StylingApiHelloDSD8F06B09",
    "StylingApiSchemaD8A6FBCC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/HelloResolver/Resource"
   }
  },
  "StylingApiClosetDSServiceRole455891F3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/ClosetDS/ServiceRole/Resource"
   }
  },
  "StylingApiClosetDSServiceRoleDefaultPolicyE9F47815": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ClosetResolverFnDB09D91C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ClosetResolverFnDB09D91C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "StylingApiClosetDSServiceRoleDefaultPolicyE9F47815",
    "Roles": [
     {
      "Ref": "StylingApiClosetDSServiceRole455891F3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/ClosetDS/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "StylingApiClosetDSA4B9B720": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "ClosetResolverFnDB09D91C",
       "Arn"
      ]
     }
    },
    "Name": "ClosetDS",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "StylingApiClosetDSServiceRole455891F3",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/ClosetDS/Resource"
   }
  },
  "StylingApiMyClosetResolver38493114": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "DataSourceName": "ClosetDS",
    "FieldName": "myCloset",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"Invoke\", \"payload\": $util.toJson($ctx)}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)",
    "TypeName": "Query"
   },
   "DependsOn": [
    "StylingApiClosetDSA4B9B720",
    "StylingApiSchemaD8A6FBCC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/MyClosetResolver/Resource"
   }
  },
  "StylingApiAdminListPendingResolver16923FC0": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "DataSourceName": "ClosetDS",
    "FieldName": "adminListPending",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"Invoke\", \"payload\": $util.toJson($ctx)}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)",
    "TypeName": "Query"
   },
   "DependsOn": [
    "StylingApiClosetDSA4B9B720",
    "StylingApiSchemaD8A6FBCC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/AdminListPendingResolver/Resource"
   }
  },
  "StylingApiCreateClosetItemF16DABD7": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "DataSourceName": "ClosetDS",
    "FieldName": "createClosetItem",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"Invoke\", \"payload\": $util.toJson($ctx)}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "StylingApiClosetDSA4B9B720",
    "StylingApiSchemaD8A6FBCC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/CreateClosetItem/Resource"
   }
  },
  "StylingApiRequestClosetApproval8385052A": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "StylingApiC401F041",
      "ApiId"
     ]
    },
    "DataSourceName": "ClosetDS",
    "FieldName": "requestClosetApproval",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"Invoke\", \"payload\": $util.toJson($ctx)}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "StylingApiClosetDSA4B9B720",
    "StylingApiSchemaD8A6FBCC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/StylingApi/RequestClosetApproval/Resource"
   }
  },
  "RolesUserRolesTable5E79EE44": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiStack/Roles/UserRolesTable/Resource"
   }
  },
  "RolesRolesFnServiceRoleE0BF34F6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/Roles/RolesFn/ServiceRole/Resource"
   }
  },
  "RolesRolesFnServiceRoleDefaultPolicyF68D6A51": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "RolesUserRolesTable5E79EE44",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RolesRolesFnServiceRoleDefaultPolicyF68D6A51",
    "Roles": [
     {
      "Ref": "RolesRolesFnServiceRoleE0BF34F6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/Roles/RolesFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RolesRolesFn3CC83E37": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "504879babee412f74f6e4e29cb20ac4186f8ed425f153979fbf0c85daaa14c59.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "RolesUserRolesTable5E79EE44"
      },
      "NODE_OPTIONS": "--enable-source-maps"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "RolesRolesFnServiceRoleE0BF34F6",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "DependsOn": [
    "RolesRolesFnServiceRoleDefaultPolicyF68D6A51",
    "RolesRolesFnServiceRoleE0BF34F6"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/Roles/RolesFn/Resource",
    "aws:asset:path": "asset.504879babee412f74f6e4e29cb20ac4186f8ed425f153979fbf0c85daaa14c59",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ClosetResolverFnServiceRole21435BA2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/ClosetResolverFn/ServiceRole/Resource"
   }
  },
  "ClosetResolverFnServiceRoleDefaultPolicy2117A20A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "DataStack:ExportsOutputFnGetAttAppTable815C50BCArnF3D9E3C3"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "WorkflowsStack:ExportsOutputRefClosetUploadApprovalDA1D2210CE637AAA"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClosetResolverFnServiceRoleDefaultPolicy2117A20A",
    "Roles": [
     {
      "Ref": "ClosetResolverFnServiceRole21435BA2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/ClosetResolverFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ClosetResolverFnDB09D91C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-637423256673-us-east-1",
     "S3Key": "4d3fb53b8fcde1b589789882f67bd06698eba21eb7891d2cc0c939e26deecd1b.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Fn::ImportValue": "DataStack:ExportsOutputRefAppTable815C50BC1988FCFB"
      },
      "APPROVAL_SM_ARN": {
       "Fn::ImportValue": "WorkflowsStack:ExportsOutputRefClosetUploadApprovalDA1D2210CE637AAA"
      },
      "NODE_OPTIONS": "--enable-source-maps"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ClosetResolverFnServiceRole21435BA2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "App",
      "Value": "stylingadventures"
     },
     {
      "Key": "Env",
      "Value": "dev"
     }
    ]
   },
   "DependsOn": [
    "ClosetResolverFnServiceRoleDefaultPolicy2117A20A",
    "ClosetResolverFnServiceRole21435BA2"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/ClosetResolverFn/Resource",
    "aws:asset:path": "asset.4d3fb53b8fcde1b589789882f67bd06698eba21eb7891d2cc0c939e26deecd1b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WOy27CMBBFv4W9M4XQDUtoRTdIpUn3aOK4YOIXGRsUWf73yk4rtat7z8hXPjXUqw0sF/igivdDpWQHsfXIB4YPOkWFuusR4j4Y7qU17OXL/PbEJGqIjVUin0serZJ8yji3xGh9QiLhCbY5GK1hF/gg/A5JMHSOJsMhvo3oLje1dTKPC30c/lPLL0IjOxSlV/TY2jDy8vcfagRZdRdjUfrpifWTQW37DuIndrNvKSmVQVkWv9bjWZpzfvAevAs+MWN7AVd6utdLWG3geXElKasxGC+1gGbOb7JdO5JJAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "RolesUserRolesTableNameC9E8D8C2": {
   "Value": {
    "Ref": "RolesUserRolesTable5E79EE44"
   }
  },
  "GraphQlApiUrl": {
   "Value": {
    "Fn::GetAtt": [
     "StylingApiC401F041",
     "GraphQLUrl"
    ]
   }
  },
  "GraphQlApiId": {
   "Value": {
    "Fn::GetAtt": [
     "StylingApiC401F041",
     "ApiId"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}